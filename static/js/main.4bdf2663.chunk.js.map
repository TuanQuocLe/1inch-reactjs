{"version":3,"sources":["components/Header/Header.styled.js","components/Header/index.js","components/Body/Body.Styled.js","components/FromToken/TokenSelect.styled.js","components/Modal/Modal.styled.js","components/Modal/index.js","components/FromToken/index.js","components/ToToken/TokenSelect.styled.js","components/ToToken/index.js","components/Body/index.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Content","Header","logIn","address","href","onClick","slice","Modal","tokens","setToken","setOpenModal","console","log","map","token","index","handleToken","logoURI","src","symbol","TokenSelect","fromData","onGetQuote","useState","openModal","fromToken","setFromToken","fromAmount","setFromAmount","Data","useMemo","value","onChange","event","target","handleFromData","toData","quote","toToken","setToToken","toAmount","setToAmount","toTokenAmount","decimals","Body","buttonDisabled","setButtonDisabled","tokenList","setTokenList","setFromData","setToData","setQuote","metaAddress","setMetaAddress","useEffect","a","Moralis","enableWeb3","initPlugins","User","current","get","Plugins","oneInch","getSupportedTokens","chain","fetchData","push","Web3","authenticate","error","getQuote","amount","Number","fromTokenAddress","toTokenAddress","doSwap","swap","fromAddress","slippage","trySwap","hasAllowance","approve","tokenAddress","alert","FromToken","ToToken","estimatedGas","disabled","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.4bdf2663.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    background-color: #333 ;\n    margin-bottom: 40px;\n    a {\n        text-decoration: none;\n        color: white;\n    }\n    \n`\nexport const Content = styled.div `\n    max-width: 1280px;\n    padding: 12px;\n    margin: auto;\n    align-items: center;\n    color: white;\n    font-size: 25px;\n    display: flex;\n    justify-content: space-between;\n    background-color: #333;\n    a {\n        margin-right: 30px;\n        background-color: transparent;\n    }\n    button {\n        border: 1px solid #4f93d8;\n        color: #4f93d8;\n        background-color: transparent;\n        font-size: 18px;\n        padding: 5px 8px;\n        border-radius: 5px;\n        max-width: 250px;\n    }\n`","\nimport { Wrapper, Content } from './Header.styled'\n\n\nconst Header = ({logIn, address}) => {\n    \n    return (\n        <Wrapper>\n            <Content>\n                <div>\n                    <a href='/'>LumSwap</a>\n                    <a href='/'>Home</a>\n                </div>\n                <button onClick={logIn}>{address ? address.slice(0,20) + '...' : 'Sign in with Metamask'}</button>\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    /* background-color: #3c3c3c ; */\n    color: white;\n    /* padding: 25px; */\n\n`\n\nexport const Content = styled.div `\n    background-color: #191919;\n    border: 2px solid #323232;\n    border-radius: 20px;\n    width: 500px;\n    margin: auto;\n    padding: 20px;\n\n    label {\n        font-size: 25px;\n    }\n\n    button {\n        width: 100%;\n        font-size: large;\n        padding: 10px;\n        border: solid 1px #323232;\n        border-radius: 5px;\n        background-color: #4f93d8 ;\n        color: white;\n        \n    }\n    button:disabled {\n        background-color: white;\n        color: #4f93d8 ;\n    }\n`\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    background-color: #292a2e ;\n    border: 1px solid #545354;\n    border-radius: 20px;\n    padding: 25px;\n    margin: 20px 0;\n`\n\nexport const Content = styled.div `\n    display: flex;\n    justify-content: space-between;\n    div {\n        margin: auto 0;\n    }\n\n    input {\n        background-color:#242627 ;\n        border: 1px solid #3a3d40 ;\n        border-radius: 5px;\n        padding: 12px 20px;\n        color: #a8a8a5;\n        outline: none;\n        font-size: 15px;\n    }\n`","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, .5);\n    display: flex;\n`\nexport const Content = styled.div `\n    width: 400px;\n    height: 700px;\n    border-radius: 5px;\n    border: silver solid 2px;\n    background-color: white;\n    margin: auto;\n    overflow: scroll;\n    color: black;\n    li {\n        display: flex;\n        padding: 5px 20px;\n        list-style: none;\n        :hover {\n            background-color: rgba(0, 0, 0, .2) ;\n            cursor: pointer;\n            color: white;\n        }\n    }\n    span {\n        margin: auto 10px;\n        font-size: 18px;\n    }\n    img {\n        width: 40px;\n        height: 40px;\n    }\n`\n","import React, { useState, useEffect } from 'react';\nimport { Wrapper, Content } from './Modal.styled'\nimport {Moralis} from 'moralis'\nimport { useMoralis } from 'react-moralis';\n\nconst Modal = ({tokens , setToken, setOpenModal}) => {\n    \n    const handleToken = (token) => {\n        setToken(token)\n        setOpenModal(false)\n    }\n\n    console.log('this is from Modal')\n    return (\n        <Wrapper >\n            <Content >\n                    {tokens.map((token, index) => {\n                        return (\n                                <li key={index} onClick={() => handleToken(token)} >\n                                {token.logoURI ? <img src={token.logoURI} /> : 'NOIMAGE'}\n                                <span>{token.symbol}</span>\n                                </li>\n\n                            \n                        )\n                    })}\n            </Content>\n        </Wrapper>\n    \n    );\n};\n\nexport default Modal;","import { useState, useEffect, useEffectLayout, memo, useMemo, useCallback } from \"react\"\nimport { Moralis } from \"moralis\"\n\nimport { Wrapper, Content } from \"./TokenSelect.styled\"\nimport Modal from \"../Modal\"\n\nconst TokenSelect = ({ tokens, fromData, onGetQuote }) => {\n    const [ openModal, setOpenModal ] = useState(false)\n    const [ fromToken, setFromToken ] = useState()\n    const [ fromAmount, setFromAmount ] = useState(0)\n\n    const Data = {fromToken, fromAmount}\n\n    const updateData = useMemo(() => {\n        fromData(Data)\n    }, [fromToken, fromAmount])\n    \n    const handleFromData = (event) => {\n        setFromAmount(event.target.value)\n        \n    }\n    return (\n        <Wrapper>\n            {openModal &&\n                <Modal\n                    tokens={tokens}\n                    setToken={setFromToken}\n                    setOpenModal={setOpenModal}\n                    >\n                </Modal>\n                }\n            <Content>\n                <div onClick={() => setOpenModal(true)}>\n                   {fromToken ? fromToken.symbol : 'Select From Token'}\n                </div>\n                <input \n                    value={fromAmount}\n                    onChange={event => handleFromData(event)}/>\n            </Content>\n        </Wrapper>\n    )\n}\nexport default TokenSelect;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    background-color: #292a2e ;\n    border: 1px solid #545354;\n    border-radius: 20px;\n    padding: 25px;\n    margin: 20px 0;\n`\n\nexport const Content = styled.div `\n    display: flex;\n    justify-content: space-between;\n    div {\n        margin: auto 0;\n    }\n\n    input {\n        background-color:#242627 ;\n        border: 1px solid #3a3d40 ;\n        border-radius: 5px;\n        padding: 12px 20px;\n        color: #a8a8a5;\n        outline: none;\n        font-size: 15px;\n    }\n`","import { useState, useEffect, memo, useMemo, useCallback } from \"react\"\nimport { Moralis } from \"moralis\"\n\nimport { Wrapper, Content } from \"./TokenSelect.styled\"\nimport Modal from \"../Modal\"\n\nconst TokenSelect = ({ tokens, toData, quote, onGetQuote }) => {\n    const [openModal, setOpenModal ] = useState(false)\n    const [ toToken, setToToken ] = useState()\n    const [ toAmount, setToAmount ] = useState(0)\n\n    const Data = { toToken, toAmount }\n    const updateData = useMemo(() => {\n        toData(Data)\n        \n    }, [toAmount, toToken])\n    return (\n        <Wrapper>\n            {openModal &&\n                <Modal\n                    tokens={tokens} \n                    setToken={setToToken}\n                    setOpenModal={setOpenModal}\n\n                    >\n                </Modal>\n                }\n            <Content>\n                <div onClick={() => setOpenModal(true)}>\n                   {toToken ? toToken.symbol : 'Select To Token'}\n                </div>\n                <input \n                    value={quote ? quote.toTokenAmount / 10**toToken.decimals : '0'}\n                    onChange={event =>setToAmount(event.target.value)\n                    }/>\n            </Content>\n        </Wrapper>\n    )\n}\nexport default TokenSelect;","import { Moralis } from 'moralis'\nimport { Wrapper, Content } from \"../Body/Body.Styled\"\nimport { useCallback, useEffect, useMemo, useState } from \"react\"\nimport Header from '../Header'\nimport FromToken from \"../FromToken\"\nimport ToToken from '../ToToken'\n\n\nconst Body = ({}) => {\n    const [ buttonDisabled, setButtonDisabled ] = useState(true)\n    const [ tokenList, setTokenList ] = useState([])\n    const [ fromData, setFromData ] = useState({})\n    const [ toData, setToData ] = useState({})\n    const [ quote, setQuote ] = useState()\n    const [ metaAddress, setMetaAddress ] = useState('')\n    useEffect( () => {\n        async function fetchData () {\n          await Moralis.enableWeb3()\n          await Moralis.initPlugins()\n          setMetaAddress(Moralis.User.current().get('ethAddress'))\n          const tokens = await Moralis.Plugins.oneInch.getSupportedTokens({\n          chain: 'eth', // The blockchain you want to use (eth/bsc/polygon)\n          });\n          setTokenList(tokens.tokens)\n        if(Moralis.User.current()) {\n          setButtonDisabled(false)\n        }  \n      }\n      fetchData()\n      \n      },[])\n      \n    let tokens = []\n\n    for (const address in tokenList) {\n    tokens.push(tokenList[address])\n    }\n    \n    \n    const logIn = async () => {\n        try {\n            const currentUser = Moralis.User.current()\n            if (!currentUser) {\n                currentUser = await Moralis.Web3.authenticate()\n            }\n            setButtonDisabled(false)\n        } catch (error) {\n            console.log(console.error())\n        }\n    }\n    const getQuote = async () => {\n        console.log('from: ', fromData, 'to: ',toData)\n        if (fromData.fromToken && toData.toToken && fromData.fromAmount) {\n            console.log('inQutoe')\n            const amount = Number(fromData.fromAmount * 10**fromData.fromToken.decimals)\n            const quote = await Moralis.Plugins.oneInch.quote({\n                chain: 'eth',\n                fromTokenAddress: fromData.fromToken.address,\n                toTokenAddress: toData.toToken.address,\n                amount: amount,\n            }) \n            setQuote(quote)\n\n        } \n    }\n    useMemo(()=> {\n        getQuote()\n    }, [fromData, toData])\n    \n    const doSwap = async (amount, address) => {\n        console.log('in doSwap')\n        await  Moralis.Plugins.oneInch.swap({\n                chain: 'eth',\n                fromTokenAddress: fromData.fromToken.address,\n                toTokenAddress: toData.toToken.address,\n                amount: amount,\n                fromAddress: address,\n                slippage: 1,\n            })\n    }\n\n    const trySwap = async () => {\n        let address = Moralis.User.current().get('ethAddress')\n        let amount = Number(fromData.amount* 10**fromData.fromToken.decimals)\n\n        if (fromData.fromToken.symbol !== 'ETH') {\n            const allowance = await Moralis.Plugins.oneInch.hasAllowance({\n                chain: 'eth',\n                fromTokenAddress: fromData.fromToken.address,\n                fromAddress: address,\n                amount: amount,\n            })\n            if (!allowance) {\n                await Moralis.Plugins.oneInch.approve({\n                    chain: 'eth',\n                    tokenAddress: fromData.fromToken.address,\n                    fromAddress: address,\n                })\n            }\n        }\n        let receipt = await doSwap(amount, address)\n        alert('swap completed')\n    }\n    \n\n    \n    return (\n        <Wrapper>\n            <Header logIn={logIn}\n                    address={metaAddress}\n                />\n            <Content>\n                <label>Swap</label>\n                <FromToken\n                    onGetQuote={getQuote}\n                    tokens={tokens}\n                    fromData={setFromData}\n                    >\n                </FromToken>\n                <ToToken\n                    tokens={tokens}\n                    toData={setToData}\n                    quote={quote}\n                    >\n                </ToToken>\n                <p>Estimated Gas: <span>{quote && quote.estimatedGas}</span></p>\n                <button disabled={buttonDisabled} onClick={trySwap}>Swap</button>\n                {quote && quote.error}\n            </Content>\n        </Wrapper>\n    )\n}\n\nexport default Body","import Header from './components/Header'\nimport Body from './components/Body'\nimport app from './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Body ></Body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from 'react-moralis'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId='hC2ylC4oPrcOrVQH6tWZX5eUqg7rmmzOFwrLjiIH' serverUrl='https://wjkaggnobyu7.usemoralis.com:2053/server'>\n      <App />\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}